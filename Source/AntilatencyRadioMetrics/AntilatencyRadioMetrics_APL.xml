<?xml version="1.0" encoding="utf-8"?>
<root xmlns:android="http://schemas.android.com/apk/res/android">
	<init>
		<log text="AntilatencyRadioMetrics APL init"/>
        <setBoolFromProperty result="bGradle" ini="Engine" section="/Script/AndroidRuntimeSettings.AndroidRuntimeSettings" property="bEnableGradle" default="false"/>
        <if condition="bGradle">
            <true>
                <log text="Processing Antilatency Radio Metrics using gradle"/>
            </true>
            <false>
                <log text="Processing Antilatency Radio Metrics using ant"/>
            </false>
        </if>
	</init>

    <proguardAdditions>
        <insert>
-keep class com.antilatency.** {
    *;
}
        </insert>
	</proguardAdditions>

    <baseBuildGradleAdditions>
        <if condition="bGradle">
            <true>

                <setBoolStartsWith result="AbsPluginDirNotDefined" source="$S(AbsPluginDir)" find="$S("/>
                <if condition="AbsPluginDirNotDefined">
                    <true>
                        <!-- Walkaround for UE 4.18-4.19 -->
                        <setStringReplace result="PluginPath" source="$S(PluginDir)" find="\" with="/"/>
                        <setBoolStartsWith result="IsEngineRelativePath" source="$S(PluginPath)" find="Engine/Plugins/"/>
                        <if condition="IsEngineRelativePath">
                            <true>
                                <setStringReplace result="EnginePath" source="$S(EngineDir)" find="\" with="/"/>
                                <setStringReplace result="EngineRelativePluginPath" source="$S(PluginPath)" find="Engine/Plugins/" with="/Plugins/"/>
                                <setStringAdd result="PluginPath" arg1="$S(EnginePath)" arg2="$S(EngineRelativePluginPath)"/>
                            </true>
                        </if>
                    </true>
                    <false>
                        <setString result="PluginPath" value="$S(AbsPluginDir)"/>
                    </false>
                </if>
                
                <insert>
allprojects {
    repositories {
        repositories {
            flatDir {
                </insert>
                <insertValue value="dirs '$S(PluginPath)/../../ThirdParty/Antilatency/Bin/Android'"/>
                <insertNewline/>
                <insert>
            }
        }
    }
}
                </insert>
            </true>
        </if>
    </baseBuildGradleAdditions>

    <buildGradleAdditions>
        <if condition="bGradle">
            <true>
                <!--replace with dependencies.implementation-->
                <insert>
dependencies.compile(name: 'AntilatencyRadioMetrics', ext: 'aar')
                </insert>
            </true>
        </if>
	</buildGradleAdditions>

    <AARImports>
        <insertValue value="repository $S(PluginDir)/../../ThirdParty/Antilatency/Bin/Android/"/>
        <insertNewline/>
        <insertValue value="AntilatencyRadioMetrics"/>
        <insertNewline/>
    </AARImports>

    <resourceCopies>
        <if condition="bGradle">
            <false>
                <setBoolIsEqual result="isArmeabi-v7a" arg1="$S(Architecture)" arg2="armeabi-v7a" />
                <if condition="isArmeabi-v7a">
                    <true>
                        <copyFile src="$S(BuildDir)/JavaLibs/AntilatencyRadioMetrics/jni/armeabi-v7a/libAntilatencyRadioMetrics.so"
                        dst="$S(BuildDir)/libs/armeabi-v7a/libAntilatencyRadioMetrics.so" />
                        <log text="Copying libAntilatencyRadioMetrics.so"/>
                    </true>
                </if>
				
				<setBoolIsEqual result="isArm64-v8a" arg1="$S(Architecture)" arg2="arm64-v8a" />
                <if condition="isArm64-v8a">
                    <true>
                        <copyFile src="$S(BuildDir)/JavaLibs/AntilatencyRadioMetrics/jni/arm64-v8a/libAntilatencyRadioMetrics.so"
                        dst="$S(BuildDir)/libs/arm64-v8a/libAntilatencyRadioMetrics.so" />
                        <log text="Copying libAntilatencyRadioMetrics.so"/>
                    </true>
                </if>
            </false>
        </if>
    </resourceCopies>
  
	<soLoadLibrary>
		<log text="Loading AntilatencyRadioMetrics.so"/>
		<loadLibrary name="AntilatencyRadioMetrics" failmsg="AntilatencyRadioMetrics library not loaded but required!" />
		<log text="Loading AntilatencyRadioMetrics.so complete"/>
	</soLoadLibrary>
 </root>
 